# AUTOGENERATED! DO NOT EDIT! File to edit: 07_fem.ipynb (unless otherwise specified).

__all__ = ['bcField']

# Cell
import numpy as np
from .base import ItemDict
from .io import jsonReader
from .utils import *

# Cell
class bcField(ItemDict):
    def readFromDict(self, data):
        self.nodes = [node[0] for node in data["Nodes"]["coords"]]
        self.nodeGroups = data["Groups"]["NodeGroups"]

        for name, bc in self.nodeGroups.items():
            self.add(name, bc)

    def getVectors(self):
        p, fext = self.getDirichlet(), self.getNeumann()
        return p, fext

    def getDirichlet(self):
        p_vector = -1*np.ones((len(self.nodes),1))
        for name, bc in self.nodeGroups.items():
            if bc["type"] == "Dirichlet":
                p_vector[list(map(lambda x: x-1,bc["nodes"]))] = bc["p"]["value"]*eval(bc["p"]["dim"])
        return p_vector

    def getNeumann(self):
        q_vector = -1*np.ones((len(self.nodes),1))
        for name, bc in self.nodeGroups.items():
            if bc["type"] == "Neumann":
                q_vector[list(map(lambda x: x-1,bc["nodes"]))] = bc["q"]["value"]*eval(bc["q"]["dim"])
        return q_vector

    def getBcData(self, bcId):
        return self.get(bcId)